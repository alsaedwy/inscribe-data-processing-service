{
  "schemaVersion": "2.2",
  "description": "Deploy Inscribe Customer Data Service",
  "parameters": {
    "imageTag": {
      "type": "String",
      "description": "Docker image tag to deploy"
    },
    "dbHost": {
      "type": "String",
      "description": "Database host"
    },
    "dbName": {
      "type": "String",
      "description": "Database name"
    },
    "dbUser": {
      "type": "String",
      "description": "Database user"
    },
    "dbPassword": {
      "type": "String",
      "description": "Database password"
    },
    "datadogApiKey": {
      "type": "String",
      "description": "Datadog API key",
      "default": ""
    },
    "datadogAppKey": {
      "type": "String",
      "description": "Datadog app key",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "deployApplication",
      "inputs": {
        "runCommand": [
          "#!/bin/bash",
          "set -e",
          "echo 'Starting deployment...'",
          "sudo yum update -y",
          "if ! command -v docker &> /dev/null; then",
          "    sudo yum install -y docker",
          "    sudo systemctl start docker",
          "    sudo systemctl enable docker",
          "    sudo usermod -a -G docker ssm-user",
          "fi",
          "echo 'Pulling Docker image: inscribe/customer-data-service:{{imageTag}}'",
          "sudo docker pull inscribe/customer-data-service:{{imageTag}}",
          "sudo docker stop inscribe-app || true",
          "sudo docker rm inscribe-app || true",
          "echo 'Starting new container...'",
          "sudo docker run -d --name inscribe-app \\",
          "  --restart unless-stopped \\",
          "  -p 8000:8000 \\",
          "  -e DB_HOST='{{dbHost}}' \\",
          "  -e DB_NAME='{{dbName}}' \\",
          "  -e DB_USER='{{dbUser}}' \\",
          "  -e DB_PASSWORD='{{dbPassword}}' \\",
          "  -e DATADOG_API_KEY='{{datadogApiKey}}' \\",
          "  -e DATADOG_APP_KEY='{{datadogAppKey}}' \\",
          "  -e ENVIRONMENT=development \\",
          "  inscribe/customer-data-service:{{imageTag}}",
          "echo 'Waiting for application to start...'",
          "sleep 30",
          "echo 'Running health check...'",
          "for i in {1..10}; do",
          "  if curl -f http://localhost:8000/health; then",
          "    echo 'Health check passed!'",
          "    break",
          "  else",
          "    echo 'Health check failed, retrying in 10 seconds...'",
          "    sleep 10",
          "  fi",
          "  if [ $i -eq 10 ]; then",
          "    echo 'Health check failed after 10 attempts'",
          "    sudo docker logs inscribe-app",
          "    exit 1",
          "  fi",
          "done",
          "echo 'Deployment completed successfully!'"
        ]
      }
    }
  ]
}
